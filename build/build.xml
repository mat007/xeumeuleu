<?xml version="1.0"?>
<project name="xeumeuleu" default="all">

    <property environment="env"/>
    <import file="${env.PONEY_HOME}/poney.xml"/>

    <!--
    ============================================================================
      libraries
    ============================================================================
    -->
    <target name="xeumeuleu" description="build library">
        <build-lib name="xeumeuleu"/>
    </target>

    <target name="xeuseuleu" depends="xeumeuleu" description="build library">
        <build-lib name="xeuseuleu"/>
    </target>

    <!--
    ============================================================================
      tests
    ============================================================================
    -->
    <target name="xeumeuleu_test" depends="xeumeuleu" description="build and run tests">
        <build-test name="xeumeuleu" depends="boost" libs="xeumeuleu,xerces-c_2"/>
    </target>

    <target name="xeuseuleu_test" depends="xeuseuleu,xeumeuleu" description="build and run tests">
        <build-test name="xeuseuleu" libs="xeuseuleu,xeumeuleu,xerces-c_2,Xalan-C_1"/>
    </target>

    <!--
    ============================================================================
      applications
    ============================================================================
    -->
    <target name="xeumeuleu_bench" depends="xeumeuleu" description="build benchmark application">
        <build-app name="xeumeuleu_bench" depends="boost" libs="xeumeuleu,xerces-c_2" subsystem="console"/>
    </target>

    <target name="xeumeuleu_clean" depends="xeumeuleu" description="build cleaning application">
        <build-app name="xeumeuleu_clean" depends="boost" libs="xeumeuleu,xerces-c_2" subsystem="console"/>
    </target>

    <!--
    ============================================================================
      clean
    ============================================================================
    -->
    <target name="clean" description="clean intermediate build artifacts">
        <delete dir="${out.dir}"/>
    </target>

    <!--
    ============================================================================
      export
    ============================================================================
    -->
    <target name="export" depends="build" description="export the distribution">
        <deploy>
            <module name="xeumeuleu">
                <include name="xml.h"/>
                <include name="exception.h"/>
                <include name="xi*.h"/>
                <include name="xo*.h"/>
                <include name="encoding.h"/>
                <include name="grammar.h"/>
                <include name="start.h"/>
                <include name="end.h"/>
                <include name="content.h"/>
                <include name="cdata.h"/>
                <include name="instruction.h"/>
                <include name="attribute.h"/>
                <include name="filter.h"/>
                <include name="adapter.h"/>
                <include name="list.h"/>
                <include name="name_list.h"/>
                <include name="attributes.h"/>
                <include name="visitor.h"/>
                <include name="caller*.h"/>
                <include name="name_caller*.h"/>
                <include name="optional.h"/>
                <include name="helpers.h"/>
            </module>
            <module name="xeuseuleu">
                <include name="xsl.h"/>
                <include name="exception.h"/>
                <include name="parameter.h"/>
                <include name="xftransform.h"/>
                <include name="xf_base_member.h"/>
                <include name="xstringtransform.h"/>
                <include name="xs_base_member.h"/>
                <include name="xtransform.h"/>
                <include name="xbuffertransform.h"/>
                <include name="buffer.h"/>
                <include name="output.h"/>
            </module>
        </deploy>
    </target>

    <!--
    ============================================================================
      package
    ============================================================================
    -->
    <target name="package" depends="-package,-apache-license" description="package the distribution"/>

    <target name="-package" depends="export,generate-vc71,generate-vc90">
        <mkdir dir="${dist.dir}"/>
        <zip destfile="${dist.dir}/xeumeuleu-src.zip" basedir=".." includes="build/**,src/**,data/**,*.txt" excludes="**/*.suo,**/*.ncb,**/.*,**/*.user,src/documentation/**"/>
        <tar destfile="${dist.dir}/xeumeuleu-src.tar.bz2" basedir=".." includes="build/**,src/**,data/**,*.txt" excludes="**/*.suo,**/*.ncb,**/.*,**/*.user,src/documentation/**" compression="bzip2"/>
        <delete file="${dist.dir}/xeumeuleu-bin-${platform}.zip"/>
        <zip destfile="${dist.dir}/xeumeuleu-bin-${platform}.zip">
            <zipfileset prefix="include" dir="${dist.dir}/include" includes="xeumeuleu/**,xeuseuleu/**"/>
            <zipfileset prefix="lib/${platform}" dir="${lib.dir}" includes="*xeumeuleu*.*,*xeuseuleu*.*,*xerces*.*,*xalan-*.*,*Xalan-*.*"/>
            <zipfileset prefix="run/${platform}" dir="${run.dir}" includes="*xerces*.*,*xalan*.*,*Xalan*.*"/>
        </zip>
    </target>

    <target name="-apache-license">
        <copy todir="${out.dir}">
            <url url="http://www.apache.org/licenses/LICENSE-2.0.txt"/>
        </copy>
        <fixcrlf srcdir="${out.dir}" includes="licenses/LICENSE-2.0.txt"/>
        <zip destfile="${dist.dir}/xeumeuleu-bin-${platform}.zip" update="true">
            <zipfileset dir="${out.dir}" fullpath="lib/${platform}/APACHE-LICENSE-2.0.txt" includes="licenses/LICENSE-2.0.txt"/>
        </zip>
    </target>

    <target name="generate-vc71" description="create vc71 build files from vc80 files">
        <copy todir="vc71" overwrite="true">
            <fileset dir="vc80" includes="*.sln,*.vcproj"/>
            <filterchain>
                <tokenfilter>
                    <replacestring from="vc80" to="vc71"/>
                    <replacestring from="8.00" to="7.10"/>
                    <replacestring from="8,00" to="7,10"/>
                    <replacestring from="9.00" to="8.00"/>
                    <replacestring from="9,00" to="8,00"/>
                    <replacestring from="UsePrecompiledHeader=&quot;2&quot;" to="UsePrecompiledHeader=&quot;3&quot;"/>
                </tokenfilter>
            </filterchain>
        </copy>
    </target>

    <target name="generate-vc90" description="create vc90 build files from vc80 files">
        <copy todir="vc90" overwrite="true">
            <fileset dir="vc80" includes="*.sln,*.vcproj"/>
            <filterchain>
                <tokenfilter>
                    <replacestring from="vc80" to="vc90"/>
                    <replacestring from="9.00" to="10.00"/>
                    <replacestring from="9,00" to="10,00"/>
                    <replacestring from="8.00" to="9.00"/>
                    <replacestring from="8,00" to="9,00"/>
                </tokenfilter>
            </filterchain>
        </copy>
    </target>

    <!--
    ============================================================================
      documentation
    ============================================================================
    -->
    <target name="documentation" depends="test" description="create documentation">
        <cpd-report/>
        <cppncss-report>
            <define name="TRY"/>
            <define name="CATCH"/>
            <macro name="READ"/>
            <macro name="WRITE"/>
            <macro name="ATTRIBUTE"/>
            <macro name="BOOST_CHECK_THROW"/>
            <macro name="BOOST_CHECK_NO_THROW"/>
            <macro name="BOOST_REQUIRE_THROW"/>
            <macro name="BOOST_REQUIRE_NO_THROW"/>
        </cppncss-report>
        <doxygen-report/>
        <tests-report/>
        <forrest/>
    </target>

    <target name="site" depends="documentation" description="deploy web site">
        <input addproperty="deploy.scp.username" message="Enter username to enable scp to deploy:"/>
        <property name="deploy.scp.dest" value="${deploy.scp.username}@web.sourceforge.net:/home/groups/x/xe/xeumeuleu/htdocs"/>
        <input addproperty="deploy.scp.password" message="Enter remote password to enable scp to ${deploy.scp.dest}:"/>
        <!-- requires scp : http://ant.apache.org/manual/OptionalTasks/scp.html -->
        <scp todir="${deploy.scp.dest}" password="${deploy.scp.password}" trust="yes" verbose="true">
            <fileset dir="${doc.dir}/site"/>
        </scp>
    </target>

    <!--
    ============================================================================
      main
    ============================================================================
    -->
    <target name="test" depends="xeumeuleu_test,xeuseuleu_test" description="run all tests"/>

    <target name="build" depends="xeumeuleu,xeuseuleu,xeumeuleu_bench,xeumeuleu_clean" description="build all"/>

    <target name="configure" description="initialize local project structure with dependencies">
        <update name="boost"/>
        <update name="mockpp"/>
        <update name="xerces-c"/>
        <update name="xalan-c"/>
    </target>

    <target name="all" depends="configure,build,test,package,documentation" description="build, run tests, package distribution and create web site"/>

</project>

<?xml version="1.0"?>
<project name="xeumeuleu" default="all">

    <!--
    <property name="platform" value="cygwin"/>
    <property name="compiler" value="gcc"/>

    <import file="../../../projects/poney/src/poney/poney.xml"/>
    -->

    <import file="//install/masa/common/dev/common/poney/poney.xml"/>

    <!--
    ============================================================================
      libraries
    ============================================================================
    -->
    <target name="xeumeuleu" description="build library">
        <build-lib name="xeumeuleu"/>
    </target>

    <!--
    ============================================================================
      tests
    ============================================================================
    -->
    <target name="xeumeuleu_test" depends="xeumeuleu" description="build and run tests">
        <build-test name="xeumeuleu" libs="xeumeuleu,xerces-c_2,libboost_unit_test_framework-${platform}-mt-1_32,mockpp"/>
        <run-test name="xeumeuleu"/>
    </target>

    <!--
    ============================================================================
      clean
    ============================================================================
    -->
    <target name="clean" depends="clean-reports" description="clean intermediate build artifacts">
        <clean name="xeumeuleu"/>
        <clean name="xeumeuleu_test"/>
    </target>

    <target name="clean-reports">
        <delete dir="${reports.dir}" includeEmptyDirs="true"/>
    </target>

    <!--
    ============================================================================
      deploy
    ============================================================================
    -->
    <target name="export" depends="build,test" description="export the distribution">
        <deploy>
            <include name="**/*.lib"/>
            <include name="**/xml.h"/>
            <include name="**/exception.h"/>
            <include name="**/xi*.h"/>
            <include name="**/xo*.h"/>
            <include name="**/encoding.h"/>
            <include name="**/grammar.h"/>
            <include name="**/start.h"/>
            <include name="**/end.h"/>
            <include name="**/content.h"/>
            <include name="**/attribute.h"/>
            <include name="**/list.h"/>
            <include name="**/functor.h"/>
            <include name="**/caller*.h"/>
            <include name="**/optional.h"/>
            <exclude name="**/*_pch.h"/>
        </deploy>
        <copy todir="${dist.dir}/dll" flatten="true">
            <fileset dir="${run.dir}" includes="*.dll"/>
        </copy>
    </target>

    <!--
    ============================================================================
      package
    ============================================================================
    -->
    <target name="package" description="package the distribution">
        <zip destfile="../xeumeuleu.zip" basedir=".." includes="build/**,src/**,data/**,run,*.txt" excludes="**/*.suo,**/*.ncb"/>
        <tar destfile="../xeumeuleu.tar.bz2" basedir=".." includes="build/**,src/**,data/**,run,*.txt" excludes="**/*.suo,**/*.ncb" compression="bzip2"/>
    </target>

    <!--
    ============================================================================
      documentation
    ============================================================================
    -->
    <target name="old_site">
        <property name="site.dir" location="../src/site"/>
        <build-doc input="${site.dir}" name="XeuMeuLeu">
            <property name="OUTPUT_DIRECTORY" value="${doc.dir}"/>
            <property name="HTML_OUTPUT" value="${doc.dir}"/>
            <property name="FILE_PATTERNS" value="*.dox"/>
            <property name="HTML_HEADER" value="${site.dir}/header.html"/>
            <property name="HTML_FOOTER" value="${site.dir}/footer.html"/>
            <property name="HTML_STYLESHEET" value="${site.dir}/maven.css"/>
            <property name="DISABLE_INDEX" value="YES"/>
            <property name="GENERATE_TREEVIEW" value="NO"/>
            <property name="GENERATE_LEGEND" value="NO"/>
        </build-doc>
        <xslt basedir="${reports.dir}" destdir="${out.dir}/doc" style="${site.dir}/boost.test.xsl">
            <include name="*_test.xml"/>
        </xslt>
        <concat destfile="${doc.dir}/xeumeuleu-test.html">
            <header file="${site.dir}/header.html"/>
            <fileset dir="${out.dir}/doc" includes="xeumeuleu_test.html"/>
            <footer file="${site.dir}/footer.html"/>
        </concat>
        <xslt basedir="${reports.dir}" destdir="${out.dir}/doc" style="${site.dir}/cpd.xsl">
            <include name="*-cpd.xml"/>
        </xslt>
        <concat destfile="${doc.dir}/xeumeuleu-cpd.html">
            <header file="${site.dir}/header.html"/>
            <fileset dir="${out.dir}/doc" includes="xeumeuleu-cpd.html"/>
            <footer file="${site.dir}/footer.html"/>
        </concat>
    </target>

    <target name="site" description="build web site">
      <forrest/>
    </target>

    <!-- requires scp : http://ant.apache.org/manual/OptionalTasks/scp.html -->
    <target name="deploy" depends="site" description="deploy web site">
      <if>
        <not>
          <isset property="deploy.scp.username"/>
        </not>
        <then>
          <input addproperty="deploy.scp.username" message="Enter username to enable scp to deploy:"/>
        </then>
      </if>
      <property name="deploy.scp.dest" value="${deploy.scp.username}@ssh.sourceforge.net:/home/groups/x/xe/xeumeuleu/htdocs"/>
      <if>
        <not>
          <isset property="deploy.scp.password"/>
        </not>
        <then>
          <input addproperty="deploy.scp.password" message="Enter remote password to enable scp to ${deploy.scp.dest}:"/>
        </then>
      </if>
      <scp todir="${deploy.scp.dest}" password="${deploy.scp.password}" trust="yes">
        <fileset dir="${out.dir}/documentation/site"/> <!-- actually ${project.site-dir} for forrest, cf. forrest.properties -->
      </scp>
    </target>

    <!--
    ============================================================================
      main
    ============================================================================
    -->
    <target name="test" depends="clean-reports,xeumeuleu_test" description="run all tests"/>

    <target name="build" depends="xeumeuleu" description="build all"/>

    <target name="configure" description="initialize local project structure with dependencies">
        <update name="boost"/>
        <update name="mockpp"/>
        <update name="xerces-c"/>
    </target>

    <target name="all" depends="configure,test,build,export,site" description="build, run tests and package distribution"/>

</project>
